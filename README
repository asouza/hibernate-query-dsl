Just a simple dsl for criteria and hql with scala. 

Just some examples of string way:

1)session.from[User].orderBy("name".asc).orderBy("age".desc).asList[User]

2) session.from[User].where("age" >= 20).and("name" like "alberto").asList[User]

3) session.from[Address].join("user").where("user.name" equal "alberto2").asList[Address]

4) session.from[Address].join("user").where("user.name" equal "alberto2").and("user.age" >= 20).asList[Address]

5) session.query("from User where name=:name and age =:age").withParams("name" -> "alberto","age" -> alberto.getAge).asList[User]

6) session.from[User].where.hasMany("address").asList[User]

Just some examples of type safe way:

val user = new User
val address = new Address 

	session.from[User].orderBy(_.getName)
	session.from[User].orderBy(_.getName).asc
	session.from[User].orderBy(_.getName).asc.orderBy(_.getAge).desc
	
	session.from[User].orderBy(lift(user.getName).asc).orderBy(lift(user.getAge).desc).asList[User]

	session.from[User].where(lift(user.getAge) >= 20).and(lift(user.getName) like "alberto").asList[User]

	session.from[Address].join(lift(address.getUser)).where(lift(address.getUser.getName) equal "alberto2").asList[Address]

	session.from[Address].join(lift(address.getUser)).where(lift(address.getUser.getName) equal "alberto2").and(lift(address.getUser.getAge) >= 20).asList[Address]

	session.query("from User where name=:name and age =:age").withParams("name" -> "alberto","age" -> alberto.getAge).asList[User]

	session.from[User].where.hasMany(lift(user.getAddresses)).asList[User]
